plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize' // If you're using it
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.2.0' // Or your Kotlin version
}

repositories {
    maven {
        name = "GitHubPackages"
        /*  Configure path to the library hosted on GitHub Packages Registry
         *  Replace UserID with package owner userID and REPOSITORY with the repository name
         *  e.g. "https://maven.pkg.github.com/enefce/AndroidLibraryForGitHubPackagesDemo"*/

        url = uri("https://maven.pkg.github.com/vivekshindhe/TestingAndroidStandard")
        credentials {
            /** Create github.properties in root project folder file with
             ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
             ** Or set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/

            username = System.getenv("GPR_USER")?:""
            password = System.getenv("GPR_API_KEY")?:""
        }
    }
}

android {
    compileSdkVersion 36

    defaultConfig {
        applicationId "com.razorpay.newsampleapp"
        minSdkVersion 22
        targetSdkVersion 36
        multiDexEnabled true

        android.buildFeatures.buildConfig = true
        def properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        buildConfigField("String", "BASE_URL", "\"${properties.getProperty("BASE_URL")}\"")
    }

    buildFeatures { // <--- ADD THIS BLOCK
        buildConfig true
        viewBinding true
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled true
            debuggable false
            proguardFile 'proguard-project.txt'
        }
    }
    namespace 'com.razorpay.sampleapp'

//    compileSdkPreview = "VanillaIceCream"

    kotlin {
        jvmToolchain(17)
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //For Razorpay checkout SDK
	implementation 'com.razorpay:checkout:1.6.41'
    implementation "androidx.core:core-ktx:1.16.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:2.1.20"
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.multidex:multidex:2.0.1'

    // Ktor Client Core
    implementation "io.ktor:ktor-client-core:3.2.0" // Use the latest Ktor version
    // Ktor Client Engine (OkHttp is a good choice for Android)
    implementation "io.ktor:ktor-client-okhttp:3.2.0"
    // Ktor Content Negotiation (for JSON serialization/deserialization)
    implementation "io.ktor:ktor-client-content-negotiation:3.2.0"
    implementation "io.ktor:ktor-serialization-kotlinx-json:3.2.0" // For Kotlinx.serialization
    // Ktor Logging (optional, but helpful for debugging)
    implementation "io.ktor:ktor-client-logging:3.2.0"


    // Kotlinx.serialization runtime (if not already present)
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0' // Use latest

    // Coroutines (you likely already have these from the Retrofit example)
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.2'
}
